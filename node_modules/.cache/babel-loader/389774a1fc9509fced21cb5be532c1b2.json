{"ast":null,"code":"var _jsxFileName = \"/Users/weidonglim/Desktop/foodastic-2/src/components/layouts/Modal.js\";\n\nclass Modal extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modalShow: false\n    };\n  }\n\n  render() {\n    let modalClose = () => this.setState({\n      modalShow: false\n    });\n\n    return React.createElement(ButtonToolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => this.setState({\n        modalShow: true\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \"Location\"), React.createElement(MyVerticallyCenteredModal, {\n      show: this.state.modalShow,\n      onHide: modalClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Modal;","map":{"version":3,"sources":["/Users/weidonglim/Desktop/foodastic-2/src/components/layouts/Modal.js"],"names":["Modal","React","Component","constructor","args","state","modalShow","render","modalClose","setState"],"mappings":";;AAAA,MAAMA,KAAN,SAAoBC,KAAK,CAACC,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,CAAC,GAAGC,IAAJ,EAAU;AACjB,UAAM,GAAGA,IAAT;AAEA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAb;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAIC,UAAU,GAAG,MAAM,KAAKC,QAAL,CAAc;AAAEH,MAAAA,SAAS,EAAE;AAAb,KAAd,CAAvB;;AAEA,WACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AACI,MAAA,OAAO,EAAC,SADZ;AAEI,MAAA,OAAO,EAAE,MAAM,KAAKG,QAAL,CAAc;AAAEH,QAAAA,SAAS,EAAE;AAAb,OAAd,CAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAQI,oBAAC,yBAAD;AACI,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,SADrB;AAEI,MAAA,MAAM,EAAEE,UAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,CADJ;AAeH;;AAzB+B;;AA4BpC,eAAeR,KAAf","sourcesContent":["class Modal extends React.Component {\n    constructor(...args) {\n        super(...args);\n\n        this.state = { modalShow: false };\n    }\n\n    render() {\n        let modalClose = () => this.setState({ modalShow: false });\n\n        return (\n            <ButtonToolbar>\n                <Button\n                    variant=\"primary\"\n                    onClick={() => this.setState({ modalShow: true })}\n                >\n                    Location\n                </Button>\n\n                <MyVerticallyCenteredModal\n                    show={this.state.modalShow}\n                    onHide={modalClose}\n                />\n            </ButtonToolbar>\n        );\n    }\n}\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}