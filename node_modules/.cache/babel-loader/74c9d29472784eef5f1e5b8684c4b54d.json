{"ast":null,"code":"var _jsxFileName = \"/Users/weidonglim/Desktop/foodastic-2/src/components/CommentBox.js\";\nimport React, { Component } from \"react\";\n\nclass CommentBox extends Component {\n  constructor(props) {\n    super(props);\n    this.addComment = this.addComment.bind(this);\n  }\n\n  addComment(e) {\n    // Prevent the default behaviour of form submit\n    e.preventDefault(); // Get the value of the comment box\n    // and make sure it not some empty strings\n\n    const comment = e.target.elements.comment.value.trim();\n    const name = e.target.elements.name.value.trim(); // Make sure name and comment boxes are filled\n\n    if (name && comment) {\n      const commentObject = {\n        name,\n        comment\n      };\n      this.props.handleAddComment(commentObject); // Publish comment\n\n      /*global Ably*/\n\n      const channel = Ably.channels.get(\"comments\");\n      channel.publish(\"add_comment\", commentObject, err => {\n        if (err) {\n          console.log(\"Unable to publish message; err = \" + err.message);\n        }\n      }); // Clear input fields\n\n      e.target.elements.comment.value = \"\";\n      e.target.elements.name.value = \"\";\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Kindly give a review on the food\"), React.createElement(\"form\", {\n      onSubmit: this.addComment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"input\",\n      name: \"name\",\n      placeholder: \"Your name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      className: \"textarea\",\n      name: \"comment\",\n      placeholder: \"Add a comment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"button is-primary bg-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Submit\")))));\n  }\n\n}\n\nexport default CommentBox;","map":{"version":3,"sources":["/Users/weidonglim/Desktop/foodastic-2/src/components/CommentBox.js"],"names":["React","Component","CommentBox","constructor","props","addComment","bind","e","preventDefault","comment","target","elements","value","trim","name","commentObject","handleAddComment","channel","Ably","channels","get","publish","err","console","log","message","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,UAAN,SAAyBD,SAAzB,CAAmC;AAC/BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACH;;AAEDD,EAAAA,UAAU,CAACE,CAAD,EAAI;AACV;AACAA,IAAAA,CAAC,CAACC,cAAF,GAFU,CAIV;AACA;;AACA,UAAMC,OAAO,GAAGF,CAAC,CAACG,MAAF,CAASC,QAAT,CAAkBF,OAAlB,CAA0BG,KAA1B,CAAgCC,IAAhC,EAAhB;AACA,UAAMC,IAAI,GAAGP,CAAC,CAACG,MAAF,CAASC,QAAT,CAAkBG,IAAlB,CAAuBF,KAAvB,CAA6BC,IAA7B,EAAb,CAPU,CASV;;AACA,QAAIC,IAAI,IAAIL,OAAZ,EAAqB;AACjB,YAAMM,aAAa,GAAG;AAAED,QAAAA,IAAF;AAAQL,QAAAA;AAAR,OAAtB;AAEA,WAAKL,KAAL,CAAWY,gBAAX,CAA4BD,aAA5B,EAHiB,CAKjB;;AACA;;AACA,YAAME,OAAO,GAAGC,IAAI,CAACC,QAAL,CAAcC,GAAd,CAAkB,UAAlB,CAAhB;AACAH,MAAAA,OAAO,CAACI,OAAR,CAAgB,aAAhB,EAA+BN,aAA/B,EAA8CO,GAAG,IAAI;AACjD,YAAIA,GAAJ,EAAS;AACLC,UAAAA,OAAO,CAACC,GAAR,CACI,sCAAsCF,GAAG,CAACG,OAD9C;AAGH;AACJ,OAND,EARiB,CAgBjB;;AACAlB,MAAAA,CAAC,CAACG,MAAF,CAASC,QAAT,CAAkBF,OAAlB,CAA0BG,KAA1B,GAAkC,EAAlC;AACAL,MAAAA,CAAC,CAACG,MAAF,CAASC,QAAT,CAAkBG,IAAlB,CAAuBF,KAAvB,GAA+B,EAA/B;AACH;AACJ;;AAEDc,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADJ,EAEI;AAAM,MAAA,QAAQ,EAAE,KAAKrB,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,SAAS,EAAC,OAFd;AAGI,MAAA,IAAI,EAAC,MAHT;AAII,MAAA,WAAW,EAAC,WAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CADJ,EAWI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,SAAS,EAAC,UADd;AAEI,MAAA,IAAI,EAAC,SAFT;AAGI,MAAA,WAAW,EAAC,eAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CAXJ,EAoBI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,SAAS,EAAC,2BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CADJ,CApBJ,CAFJ,CADJ;AAiCH;;AAxE8B;;AA2EnC,eAAeH,UAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass CommentBox extends Component {\n    constructor(props) {\n        super(props);\n        this.addComment = this.addComment.bind(this);\n    }\n\n    addComment(e) {\n        // Prevent the default behaviour of form submit\n        e.preventDefault();\n\n        // Get the value of the comment box\n        // and make sure it not some empty strings\n        const comment = e.target.elements.comment.value.trim();\n        const name = e.target.elements.name.value.trim();\n\n        // Make sure name and comment boxes are filled\n        if (name && comment) {\n            const commentObject = { name, comment };\n\n            this.props.handleAddComment(commentObject);\n\n            // Publish comment\n            /*global Ably*/\n            const channel = Ably.channels.get(\"comments\");\n            channel.publish(\"add_comment\", commentObject, err => {\n                if (err) {\n                    console.log(\n                        \"Unable to publish message; err = \" + err.message\n                    );\n                }\n            });\n\n            // Clear input fields\n            e.target.elements.comment.value = \"\";\n            e.target.elements.name.value = \"\";\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <h1 className=\"title\">Kindly give a review on the food</h1>\n                <form onSubmit={this.addComment}>\n                    <div className=\"field\">\n                        <div className=\"control\">\n                            <input\n                                type=\"text\"\n                                className=\"input\"\n                                name=\"name\"\n                                placeholder=\"Your name\"\n                            />\n                        </div>\n                    </div>\n                    <div className=\"field\">\n                        <div className=\"control\">\n                            <textarea\n                                className=\"textarea\"\n                                name=\"comment\"\n                                placeholder=\"Add a comment\"\n                            />\n                        </div>\n                    </div>\n                    <div className=\"field\">\n                        <div className=\"control\">\n                            <button className=\"button is-primary bg-info\">\n                                Submit\n                            </button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default CommentBox;\n"]},"metadata":{},"sourceType":"module"}